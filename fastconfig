#!/bin/bash

# # #
# Default path to fastconfig
CONFIG_FASTCONFIG_INI="$(pwd)/fastconfig.ini"
CONFIG_DIRECTORY="$(pwd)/config"
CONFIG_SOURCE_DIR="$(pwd)/source"


# # #
# Return all rows from PROJECT section fastconfig.ini
function getProjects()
{
  awk '
BEGIN {
  FS="="
  section=""
}
{
  if(match($1, /^\[[a-zA-Z0-9\_]+\]$/))
  {
    print $1
  }

}
' $CONFIG_FASTCONFIG_INI
}

# # #
# Return count PROJECT section fastconfig.ini
function getProjectsCount()
{
  echo "$(getProjects | wc -l | awk '{print $1}')"
}

# # #
# Check path for it identity file or directory
# 1 - it's file
# 2 - it's directory
# 0 - not exist or other
function checkIsFileOrDirectory()
{
  if [[ -f $1 ]]; then
    echo 1
  elif [[ -d $1 ]]; then
    echo 2
  else
    echo 0
  fi
}

# # #
# Copy project source file from your project
function copyProjectSourceFiles()
{
  echo In $CONFIG_FASTCONFIG_INI finded "$(getProjectsCount)" projects
  echo Check files and copy:

  COUNT=0

  getProjects | while read -r line
  do
    ((COUNT++))

    LOCAL_PROJECT="$(echo "$line" | awk 'BEGIN{FS="="}{print $1}')"
    LOCAL_PROJECT_PATH="$(echo "$line" | awk 'BEGIN{FS="="}{print $2}')"
    LOCAL_SOURCE_CONFIG_PATH="${CONFIG_SOURCE_DIR}/${LOCAL_PROJECT}/"

    printf "%d. Project: %s\t %s\n" $COUNT "$LOCAL_PROJECT" "$LOCAL_PROJECT_PATH"

    if [[ 0 == $(checkIsFileOrDirectory "$CONFIG_SOURCE_DIR") ]]; then
      mkdir "$CONFIG_SOURCE_DIR"
    fi

    if [[ 0 != $(checkIsFileOrDirectory "$LOCAL_PROJECT_PATH") ]]; then
      if [[ 0 == $(checkIsFileOrDirectory "$LOCAL_SOURCE_CONFIG_PATH") ]]; then
        mkdir "$LOCAL_SOURCE_CONFIG_PATH"
      fi

      cp "$LOCAL_PROJECT_PATH" "$LOCAL_SOURCE_CONFIG_PATH"
    fi
  done
}

# # #
# Create config from file how placed in source
function createConfigFromSource()
{
  if [[ 0 == $(checkIsFileOrDirectory "$CONFIG_DIRECTORY") ]]; then
    mkdir "$CONFIG_DIRECTORY"
  fi
}

# # #
# return directive from fastconfig ini by alias
function getDirective()
{
  if [[ -z $1 ]]; then
    echo "Need set alias"
  fi

  if [[ -z $2 ]]; then
    echo "Need set directive how value you want get"
  fi

  awk -v alias="$1" -v directive="$2" '
  BEGIN {
    FS="="
    section=""
    value=""
    codeError="codeError:"
  }
  {

  if (match($1, /^\[[a-zA-Z0-9\_]+\]$/)) {
      currentAlias = substr($1, match($1, /[^\[].*[^\]]/), RLENGTH)

      if ("" == section && currentAlias == alias) {
        section = currentAlias
      }

      if (section != "" && section != currentAlias) {
        exit 1
      }
  }

  if (alias == section) {
    gsub(" ", "", $1);
    gsub(" ", "", $2);

    if (directive == $1) {
      value=$2
      exit 1
    }
  }
  } END {
    print value
  }' $CONFIG_FASTCONFIG_INI
}

# # #
# Get filename from file
function getSourceFileName() {
  if [[ -n "$1" ]]; then
     getProjects | awk -v project="$1" 'BEGIN {FS="="} {if($1 == project){print substr($2, match($2, /[^\/]+$/), RLENGTH)}}'
  fi
}

# # #
# Find alias fastconfig.ini
function findAlias()
{
  awk '
BEGIN {
  FS="="
}
{
  print substr($1, match($1, /[^\[].*[^\]]/), RLENGTH)
}
' $CONFIG_FASTCONFIG_INI
}

# # #
# add alias to config
function addAlias()
{
  alias="[$1]"
  aliasWithoutBrackets="$1"

  # check STDIN alias
  if [[ -n "$1" && $(printf "%s" "$alias" | awk '/^.+$/{print match($1, /[a-zA-Z0-9\_]+/)}') -gt 0 ]]; then
    DIRECTORY_WITH_ALIAS="${CONFIG_DIRECTORY}/${alias}"

    # Create config directory if not exists
    if [[ 0 == $(checkIsFileOrDirectory "$CONFIG_DIRECTORY") ]]; then
      mkdir $CONFIG_DIRECTORY
    fi

    # create config file
    if [[ 0 == $(checkIsFileOrDirectory "$CONFIG_FASTCONFIG_INI") ]]; then
      touch "$CONFIG_FASTCONFIG_INI"
    fi

    isAliasExist=$(awk -v alias="$alias" '
    BEGIN {
      FS="="
      isFinded=0
    }
    {
      configAlias=substr($1, match($1, /^\[[a-zA-Z0-9\_]+\]$/), RLENGTH)

      if (configAlias == alias)
      {
        isFinded=1
        exit 1
      }
    }
    END {
      print isFinded
    }
    ' "$CONFIG_FASTCONFIG_INI")

    if [[ 1 == "$isAliasExist" ]]; then
      echo "Alias $aliasWithoutBrackets already exist"
    else
      echo "$alias" >> "$CONFIG_FASTCONFIG_INI"
      echo "source_file = path/to/config.php" >> "$CONFIG_FASTCONFIG_INI"
      echo "source_config_name = config_name" >> "$CONFIG_FASTCONFIG_INI"
      echo "output_dir = path/to/config.php" >> "$CONFIG_FASTCONFIG_INI"
      echo "output_file_name = output_file_name" >> "$CONFIG_FASTCONFIG_INI"
      echo "" >> "$CONFIG_FASTCONFIG_INI"
      echo "Alias $aliasWithoutBrackets has added"
    fi

  else
    echo "Your need write alias name"
  fi
}

# # #
# Get list of commands
function getHelp()
{
  echo "FastConfig "
  echo "How to use [argument] [additional option]. For example -a my_alias"
  echo ""
  echo "    +--------------------------------------------------------+"
  echo "    |                   TABLE OF COMMANDS                    |"
  echo "    +----+------------+--------------------------------------+"
  echo "    | -h | --help     | list all commands                    |"
  echo "    +----+------------+--------------------------------------+"
  echo "    | -a | --add      | add new aliast to fastconfig.ini     |"
  echo "    +----+------------+--------------------------------------+"
  echo "    | -g | --generate | generate all alliases                |"
  echo "    |    |            | have additional options, you're can  |"
  echo "    |    |            | add alias name to generate only one  |"
  echo "    |    |            | directive                            |"
  echo "    +----+------------+--------------------------------------+"
  echo "    | -s | --switch   | switch config by alias               |"
  echo "    +----+------------+--------------------------------------+"
  echo "    | -l | --list     | print list exist aliases             |"
  echo "    +----+------------+--------------------------------------+"
  echo ""
}

# # #
# Copy source files from projects to fastconfig config directory
function generate()
{
  aliasesFromConfig=$(getProjects | sed 's/^\[\(.*\)\]$/\1/' )
  COUNT=0

  for alias in $aliasesFromConfig
  do

    GENERATE_CONFIG_DIR="$CONFIG_DIRECTORY/$alias"
      awk -v alias="[$alias]" '
      BEGIN  {
        FS="="
        section=""
      }
      {
        aliasFromFile=substr($1, match($1, /^[[a-zA-Z0-9\_]+\]$/), RLENGTH)
        if (aliasFromFile == alias && section == "" || section == alias) {
          section=alias
        } else {
          exit 1
        }
      }' $CONFIG_FASTCONFIG_INI

    if [[ 0 == $(checkIsFileOrDirectory "$GENERATE_CONFIG_DIR") ]]; then
      ((COUNT++))

      echo "$COUNT. $alias"

      echo "Alias $alias not finded by path $GENERATE_CONFIG_DIR"

      mkdir $GENERATE_CONFIG_DIR
      echo "Alias $alias created by path $GENERATE_CONFIG_DIR"

      cp "$(getDirective $alias source_file)" "$GENERATE_CONFIG_DIR/"


    fi


  done
}

# # #
# Switch aliase for project
function switch()
{
  alias=$1
  isFindAlias=0

  if [[ -z "$alias" ]]; then
    echo "Your are not set alias to switch"
  fi

  projects=$(getProjects | sed 's/^\[\(.*\)\]$/\1/')

  for project in $projects;
  do
    if [[ "$alias" == "$project" ]]; then
      isFindAlias=1
    fi
  done

  if [[ 0 == "$isFindAlias" ]]; then
    echo "Alias $alias is not finded in fastconfig.ini"
    exit 1
  fi

  sourceFile="$CONFIG_DIRECTORY/$alias/$(getDirective "$alias" "source_config_name")"
  outputFile="$(getDirective "$alias" "output_dir")/$(getDirective "$alias" "output_file_name")"

  cp "$sourceFile" "$outputFile"
  echo "Config has been switched"
}

case $1 in
  "-a" | "--add")
    addAlias "$2"
    ;;

  "-l" | "--list")
    getProjects | sed 's/^\[\(.*\)\]$/\1/'
    ;;

  "-h" | "--help" | "")
    getHelp
    ;;

  "-g" | "--generate")
  generate
    ;;

  "-s" | "--switch")
  switch $2
    ;;

  * )
    echo "Command $1 not found, type -h for get list of commands"
    ;;
esac
